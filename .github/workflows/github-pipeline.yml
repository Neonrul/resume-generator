name: Build & Deploy to GH-Pages

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
  push:
    branches:
      - main

env:
  DEPLOY_ENVIRONMENT: github-pages
  ARTIFACT_NAME: gh-pages-build
  BUILD_PATH: dist

jobs:
  build:
    name: Build
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    permissions:
      actions: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if PR is draft
        if: github.event.pull_request.draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::warning :: PR is in the draft state. Workflow is stopping early."
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '>=18.15.x'

      - name: Install dependencies
        run: npm ci

      - name: Prettier fix
        run: npm run prettier:fix

      - name: Lint check
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build app
        run: npm run build

      - name: Upload Pages artifact
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}
          name: ${{ env.ARTIFACT_NAME }}

  deploy:
    name: Deploy to GH-Pages
    needs: build
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: ${{ env.ARTIFACT_NAME }}

      - name: Delete Artifacts
        env:
          REPO: ${{ github.repository }}
          TOKEN: ${{ secrets.DELETE_ARTIFACTS_TOKEN }}
        run: |
          sudo apt-get install jq
          chmod +x .github/scripts/delete_artifacts.sh
          bash .github/scripts/delete_artifacts.sh
